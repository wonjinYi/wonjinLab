{"version":3,"sources":["img/wannagohome.png","Home.jsx","Loading.jsx","RepGen.jsx","Tag.jsx","SuperFilter.jsx","App.js","index.js"],"names":["HomeWrap","styled","div","Home","src","wannagohome","alt","style","color","Loading","isLoading","LoadingWrap","className","Backdrop","spinning","size","indicator","LoadingOutlined","fontSize","spin","TextArea","Input","RepGenWrap","InputContainer","JsonInput","ConvertBtn","Button","TableContainer","Table","table","TableRow","tr","TableCell","td","RepGen","useState","setIsLoading","labelSrc","setLabelSrc","userSrc","setUserSrc","report","setReport","useEffect","console","log","fontWeight","placeholder","value","onChange","e","target","rows","margin","onClick","parsedUsers","JSON","parse","users","forEach","labels","results","arr","obj","datakey","asset","key","email","work_assignee","issueCnt","open_issue_count","user","name","push","err","error","borderTop","borderBottom","map","item","index","Tag","SuperFilterWrap","SuperFilter","h3","AppWrap","Nav","Logo","NavItem","span","App","to","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1f45c56.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/wannagohome.bdfa1aad.png\";","import {useState, useEffect} from 'react';\n\nimport styled from 'styled-components';\n\nimport wannagohome from './img/wannagohome.png';\nfunction Home() {\n\n\n    return (\n        <HomeWrap>\n            <img src={wannagohome} alt=\"gohome\" />\n            <p style={{color:\"grey\"}}>goranimaster17@gmail.com</p>\n        </HomeWrap>\n    )\n}\n\nconst HomeWrap = styled.div`\n    display : flex;\n    flex : 1;\n    flex-direction : column;\n    justify-content : center;\n    align-items : center;\n   \n    padding : 24px;\n`;\n\nexport default Home;","// imported Modules =============================================\nimport { React } from \"react\";\n\nimport styled from \"styled-components\";\nimport { Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\n\n// Main Component ===============================================\nexport default function Loading ({ isLoading }) {\n    \n    if ( isLoading ){\n        return (\n            <LoadingWrap className=\"Loading\">\n                <Backdrop></Backdrop>\n                <Spin spinning={isLoading} size=\"large\" indicator={<LoadingOutlined style={{ fontSize: 64 }} spin />} />\n            </LoadingWrap>\n        );\n    } else {\n        return <div className=\"Loading\"></div>;\n    }\n   \n}\n\n// style ========================================================\nconst LoadingWrap = styled.div`\n    position : fixed;\n    top : 0; \n    left : 0;\n    display : flex;\n    justify-content : center;\n    align-items : center;\n    width : 100%; \n    height : 100%;\n    `;\n\nconst Backdrop = styled.div`\n    position : fixed;\n    top : 0; \n    left : 0;\n    width : 100%;\n    height : 100%;\n    background-color : rgba(0,0,0, 0.75);\n    `;","import {useState, useEffect} from 'react';\nimport Loading from './Loading';\nimport styled from 'styled-components';\nimport { Input, Button } from 'antd';\nconst { TextArea } = Input;\n\n\n\nfunction RepGen() {\n    const [isLoading, setIsLoading] = useState(false);\n\n    const [labelSrc, setLabelSrc] = useState('');\n    const [userSrc, setUserSrc] = useState('');\n    const [report, setReport] = useState([])\n\n    const onGazua = () => {\n        setIsLoading(true);\n\n        try {\n            // 유저 정보 가공\n            const parsedUsers = JSON.parse(userSrc);\n            let users = [] \n            console.log(parsedUsers);\n            parsedUsers.forEach( e => {\n                users = [...users, ...e.users];\n            });\n            console.log(users);\n\n            // 리포트 객체 만들기\n            const labels = (JSON.parse(labelSrc)).results;\n            const arr = [];\n            labels.forEach( e => {\n                let obj = {};\n                obj.datakey = e.asset.key;\n                obj.email = e.work_assignee;\n                obj.issueCnt = e.open_issue_count;\n            \n                for(const user of users){\n                    if(user.email === obj.email){\n                        obj.name = user.name;\n                        break;\n                    }\n                }\n\n                arr.push(obj);\n            })\n            setReport([...arr]);\n        } catch (err) {\n            console.error(err);\n        }\n        \n        setIsLoading(false);\n    }\n\n    useEffect( () => {\n        console.log(report);\n    }, [report]);\n\n    return (\n        <RepGenWrap>\n            <p>RepGen :: Report Generator</p>\n\n            <InputContainer>\n                <p style={{color:\"#FF625A\", fontWeight:\"bold\", fontSize:\"32px\"}}>users/</p>\n                <JsonInput placeholder=\"users/\" value={userSrc} onChange={e=>setUserSrc(e.target.value)} rows={4} />\n                \n                <JsonInput placeholder=\"labels/\" value={labelSrc} onChange={e=>setLabelSrc(e.target.value)}  rows={4} />\n                <p style={{color:\"#FF625A\", fontWeight:\"bold\", fontSize:\"32px\"}}>labels/</p>\n            </InputContainer>\n            \n            <ConvertBtn style={{margin:\"24px\"}} onClick={onGazua} size=\"large\">가즈아</ConvertBtn>\n\n            <TableContainer>\n                <Table>\n                    <TableRow style={{borderTop:\"none\", borderBottom:\"1px solid #FF625A\"}}>\n                        <TableCell style={{color:\"#FF625A\", fontWeight:\"bold\"}}>어사이니</TableCell>\n                        <TableCell style={{color:\"#FF625A\", fontWeight:\"bold\"}}>메일</TableCell>\n                        <TableCell style={{color:\"#FF625A\", fontWeight:\"bold\"}}>데이터키</TableCell>\n                        <TableCell style={{color:\"#FF625A\", fontWeight:\"bold\"}}>이슈카운트</TableCell>\n                    </TableRow>\n                    {\n                        report.map( (item,index) => (\n                            <TableRow key={index}>\n                                <TableCell>{item.name}</TableCell>\n                                <TableCell>{item.email}</TableCell>\n                                <TableCell>{item.datakey}</TableCell>\n                                <TableCell>{item.issueCnt}</TableCell>\n                            </TableRow>\n                        ))\n                    }\n                    \n                </Table>\n            </TableContainer>\n\n            <Loading isLoading={isLoading} />\n        </RepGenWrap>\n    )\n}\n\nconst RepGenWrap = styled.div`\n    display : flex;\n    flex : 1;\n    flex-direction : column;\n    align-items : center;\n\n    padding : 24px 64px;\n`;\n\nconst InputContainer = styled.div`\n    display : flex;\n    width : 100%;\n`;\n\nconst JsonInput = styled(TextArea)`\n    margin : 8px;\n    &:hover { border-color : #FF625A; }\n    &:focus { \n        border-color : #FF625A; \n        box-shadow: 0 0 0 5px #FF625A30;\n    }\n`;\n\nconst ConvertBtn = styled(Button)`\n    width : 128px;\n    height : 128px;\n    border-radius : 64px;\n    &:hover { \n        border-color : #FF625A; \n        color : #FF625A;\n    }\n    &:focus { \n        border-color : #FF625A; \n        color : #FF625A\n    }\n`;\n\nconst TableContainer = styled.div`\n    border : 2px solid #D9D9D9;\n    border-radius : 24px;\n    padding : 8px;\n`;\n\nconst Table = styled.table`\n    text-align : center;\n`;\n\nconst TableRow = styled.tr`\n    border-top : 1px solid #D9D9D9;\n`;\n\nconst TableCell = styled.td`\n    padding : 16px 24px;\n    \n`;\n\nexport default RepGen;","import { Input } from \"antd\";\nimport { CloseCircleOutlined } from \"@ant-design/icons\"\nimport 'antd/dist/antd.css';\nfunction Tag({name, index, state, setState}) {\n\n    const handleChange = (e) => {\n        setState([...state.slice(0,index), e.target.value, ...state.slice(index+1, state.length)])\n    }\n\n    return (\n        <div className=\"Tag\">\n            <Input \n                placeholder=\"태그\" \n                value={name}\n                onChange={handleChange}\n                suffix={<CloseCircleOutlined />}\n                style={{width:\"128px\"}} \n            />\n        </div>\n    )\n}\n\nexport default Tag;","import {useState, useEffect} from 'react';\n\nimport styled from 'styled-components';\nimport { Button } from 'antd';\n\nimport Tag from \"./Tag\";\n\nfunction SuperFilter() {\n    const [allof, setAllof] = useState([\"aa\", \"bb\"]);\n    const [noneof, setNoneof] = useState([]);\n\n    return (\n        <SuperFilterWrap>\n            <h3>SuperFilter Route</h3>\n            <p>집에가고싶다</p>\n            {/*<Filter>\n                <FilterName>모두 포함</FilterName>\n                { allof.map( (tag, index) => <Tag name={tag} index={index} state={allof} setState={setAllof}/> ) }\n                \n            </Filter> */}\n            \n            \n\n        </SuperFilterWrap>\n    )\n}\n\nconst SuperFilterWrap = styled.div`\n    display : flex;\n    flex-direction : column;\n    align-items : center;\n\n    padding : 24px;\n`;\n\nconst Filter = styled.div`\n    display : flex;\n    align-items : center;\n    padding : 16px;\n`;\n\nconst FilterName = styled.h3`\n    color : #FF625A;\n    font-weight : 800;\n    font-size : 16px;\n    margin : 0;\n`;\n\nexport default SuperFilter;","\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\n\nimport styled from 'styled-components';\n\nimport Home from './Home';\nimport RepGen from './RepGen';\nimport SuperFilter from './SuperFilter';\n\nfunction App() {\n    return (\n        <AppWrap className=\"App\">\n            <BrowserRouter>\n                <Nav>\n                    <Link to=\"/\"><Logo /></Link>\n                    <Link to=\"/RepGen\"><NavItem>RepGen</NavItem></Link>\n                    <Link to=\"/SuperFilter\"><NavItem>SuperFilter</NavItem></Link>\n                </Nav>\n                <Route path=\"/\" exact={true} component={Home} />\n                <Route path=\"/RepGen\" component={RepGen} />\n                <Route path=\"/SuperFilter\" component={SuperFilter} />\n            </BrowserRouter>\n        </AppWrap>\n    );\n}\n\nconst AppWrap = styled.div`\n    display : flex;\n    flex-direction : column;\n\n    height : 100%;\n`;\n\nconst Nav = styled.div`\n    display : flex;\n    align-items : center;\n\n    min-height : 48px;\n\n    padding-left : 64px;\n    padding-right : 64px;\n\n    background-color : #333333;\n`;\n\nconst Logo = styled.div`\n    height : 24px;\n    width : 24px;\n\n    border : 3px solid #FF625A;\n`;\n\nconst NavItem = styled.span`\n    margin-left : 16px;\n\n    padding : 8px;\n\n    font-size : 16px;\n    font-weight : 400;\n    color : white;\n\n    border-radius : 8px;\n\n    transition : 0.5s background-color;\n\n    &:hover {\n        transition : 0.5s background-color;\n        background-color : #FFFFFF30;\n    }\n`;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}